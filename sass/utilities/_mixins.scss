@import '../utilities/variables';
@import '../themes/theme';
@import '../utilities/extend';

@mixin gradientBackground($from, $to) {
  background-image: linear-gradient(
  to right, $from, $to);
}

@mixin getShadow {
  -webkit-box-shadow: 0 8px 17px 2px rgba(71, 69, 69, 0.069), 0 3px 14px 2px rgba(71, 69, 69, 0.069), 0 5px 5px -3px rgba(107, 35, 35, 0.069);
          box-shadow: 0 8px 17px 2px rgba(71, 69, 69, 0.069), 0 3px 14px 2px rgba(71, 69, 69, 0.069), 0 5px 5px -3px rgba(107, 35, 35, 0.069);
}

@mixin aligment($align-items, $direction, $justify) {
  -webkit-align-items: $align-items;
    -webkit-box-align: $align-items;
        -ms-flex-align: $align-items;
          align-items: $align-items;
          flex-direction: $direction;
          justify-content: $justify;
          display: -webkit-box;
          display: -webkit-flex;
          display: -ms-flexbox;
          display: flex;
}

@mixin setSize($paddingY, $paddingX, $size) {
  padding: $paddingY $paddingX !important;
  font-size: $size !important;
}

@mixin setSizeText($size) {
  font-size: $size !important;
}

@mixin setSizeFab($widthFab, $heightFab, $paddingFab, $size) {
  width: $widthFab !important;
  height: $heightFab !important;
  padding: $paddingFab !important;
  font-size: $size !important;
}

@mixin setProps($background, $border, $textColor, $textDecoration) {
  background-color: $background !important; 
  border: $border !important;
  color: $textColor !important;
  text-decoration: $textDecoration !important;
}

@mixin buttonProps($buttonType) {
  @if $buttonType == 'contained' {
    @include setProps($primaryColor, none, $white-color, none);
    &:hover {
      @include setProps($primaryDarkColor, none, $white-color, none);
    }
    &:focus {
      @include setProps($primaryLightColor, none, $white-color, none);
    }
  } @else if $buttonType == 'outlined' {
    @include setProps(transparent, 1px solid $primaryColor, $primaryColor, none);
    &:hover {
      @include setProps($primaryColor, 1px solid $primaryColor, $white-color, none);
    }
    &:focus {
      @include setProps($btnOutlinedPressed, 1px solid $primaryColor, $primaryColor, none);
    }
  } @else if $buttonType == 'text' {
    @include setProps(transparent, none, $primaryTextColor, none);
    &:hover {
      @include setProps(transparent, none, $primaryDarkColor, underline);
    }
    &:focus {
      @include setProps(transparent, none, $primaryLightColor, none);
    }
  } @else if $buttonType == 'fab' {
    @extend %fabProps;
    @include getShadow();
    &:hover {
      @include setProps($primaryDarkColor, none, $white-color, none);
    }
  } @else {
    @include setProps($primaryColor, none, $white-color, none);
    &:hover {
      @include setProps($primaryDarkColor, none, $white-color, none);
    }
    &:focus {
      @include setProps($primaryLightColor, none, $white-color, none);
    }
    @error "Unknown type button #{$buttonType}.";
  }
}

@mixin buttonSize($buttonSize) {
  @if $buttonSize == 'small' {
      @include setSize($btn-padding-y / 2, $btn-padding-x / 2, $btn-text-small);
  } @else if $buttonSize == 'medium' {
      @include setSize($btn-padding-y, $btn-padding-x, $btn-text-medium);
  } @else if $buttonSize == 'large' {
     @include setSize($btn-padding-y * 1.2, $btn-padding-x * 1.4, $btn-text-large);
  } @else {
      @include setSize($btn-padding-y, $btn-padding-x, $btn-text-medium);
      @error "Unknown size button #{$buttonSize}.";
  }
}

@mixin buttonSizeText($buttonSize) {
  @if $buttonSize == 'small' {
      @include setSizeText($btn-text-small / 1);
  } @else if $buttonSize == 'medium' {
      @include setSizeText($btn-text-medium);
  } @else if $buttonSize == 'large' {
     @include setSizeText($btn-text-large * 1.3);
  } @else {
      @include setSize($btn-text-medium);
      @error "Unknown size button #{$buttonSize}.";
  }
}

@mixin buttonSizeFab($buttonSize) {
  @if $buttonSize == 'small' {
      @include setSizeFab(
        $btn-width-fab / 1.3, 
        $btn-height-fab / 1.3, 
        $btn-padding-fab / 1.3, 
        $btn-text-small);
  } @else if $buttonSize == 'medium' {
    @include setSizeFab(
      $btn-width-fab, 
      $btn-height-fab, 
      $btn-padding-fab, 
      $btn-text-medium);
     
  } @else if $buttonSize == 'large' {
    @include setSizeFab(
      $btn-width-fab * 1.4, 
      $btn-height-fab * 1.4, 
      $btn-padding-fab * 1.4, 
      $btn-text-large);
      .btn-icon {
        font-size: 2rem;
      }
  } @else {
    @include setSizeFab(
      $btn-width-fab, 
      $btn-height-fab, 
      $btn-padding-fab, 
      $btn-text-medium);
      @error "Unknown size button #{$buttonSize}.";
  }
}

